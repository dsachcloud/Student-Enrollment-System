{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Response interceptor for handling errors\napi.interceptors.response.use(response => response, error => {\n  const {\n    response\n  } = error;\n  if (response) {\n    // Handle specific error statuses\n    switch (response.status) {\n      case 400:\n        console.error('Bad Request:', response.data);\n        break;\n      case 401:\n        console.error('Unauthorized:', response.data);\n        break;\n      case 403:\n        console.error('Forbidden:', response.data);\n        break;\n      case 404:\n        console.error('Not Found:', response.data);\n        break;\n      case 500:\n        console.error('Server Error:', response.data);\n        break;\n      default:\n        console.error(`Error ${response.status}:`, response.data);\n    }\n  } else {\n    // Network errors or other issues where response isn't available\n    console.error('Network Error or Server is not responding');\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","response","use","error","status","console","data","Promise","reject"],"sources":["D:/Godot/student enrollment/student-enrollment-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Response interceptor for handling errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    const { response } = error;\r\n    \r\n    if (response) {\r\n      // Handle specific error statuses\r\n      switch (response.status) {\r\n        case 400:\r\n          console.error('Bad Request:', response.data);\r\n          break;\r\n        case 401:\r\n          console.error('Unauthorized:', response.data);\r\n          break;\r\n        case 403:\r\n          console.error('Forbidden:', response.data);\r\n          break;\r\n        case 404:\r\n          console.error('Not Found:', response.data);\r\n          break;\r\n        case 500:\r\n          console.error('Server Error:', response.data);\r\n          break;\r\n        default:\r\n          console.error(`Error ${response.status}:`, response.data);\r\n      }\r\n    } else {\r\n      // Network errors or other issues where response isn't available\r\n      console.error('Network Error or Server is not responding');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACT,MAAM;IAAEF;EAAS,CAAC,GAAGE,KAAK;EAE1B,IAAIF,QAAQ,EAAE;IACZ;IACA,QAAQA,QAAQ,CAACG,MAAM;MACrB,KAAK,GAAG;QACNC,OAAO,CAACF,KAAK,CAAC,cAAc,EAAEF,QAAQ,CAACK,IAAI,CAAC;QAC5C;MACF,KAAK,GAAG;QACND,OAAO,CAACF,KAAK,CAAC,eAAe,EAAEF,QAAQ,CAACK,IAAI,CAAC;QAC7C;MACF,KAAK,GAAG;QACND,OAAO,CAACF,KAAK,CAAC,YAAY,EAAEF,QAAQ,CAACK,IAAI,CAAC;QAC1C;MACF,KAAK,GAAG;QACND,OAAO,CAACF,KAAK,CAAC,YAAY,EAAEF,QAAQ,CAACK,IAAI,CAAC;QAC1C;MACF,KAAK,GAAG;QACND,OAAO,CAACF,KAAK,CAAC,eAAe,EAAEF,QAAQ,CAACK,IAAI,CAAC;QAC7C;MACF;QACED,OAAO,CAACF,KAAK,CAAC,SAASF,QAAQ,CAACG,MAAM,GAAG,EAAEH,QAAQ,CAACK,IAAI,CAAC;IAC7D;EACF,CAAC,MAAM;IACL;IACAD,OAAO,CAACF,KAAK,CAAC,2CAA2C,CAAC;EAC5D;EAEA,OAAOI,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}